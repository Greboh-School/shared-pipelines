name: Build & Publish NuGet

on:
  workflow_call:

permissions:
  contents: write
  pull-requests: write
  statuses: write
  packages: write
  checks: write

env:
  TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
  TESTCONTAINERS_RYUK_DISABLED: "true"
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages # Ensures that NuGet packages are always stored in the location

jobs:
  discover:
    uses: Greboh-School/shared-pipelines/.github/workflows/dotnet-git-versioning.yaml@main
    secrets: inherit

  build-and-publish:
    runs-on: ubuntu-latest
    needs: discover
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Set env vars
        run: |
          echo "NUGET_USERNAME=${{ vars.NUGET_USERNAME }}" >> $GITHUB_ENV
          echo "NUGET_TOKEN=${{ secrets.ORG_NUGET_TOKEN }}" >> $GITHUB_ENV

      - name: Configure dotnet
        uses: actions/setup-dotnet@v4
        with:
          source-url: ${{ vars.NUGET_LOCATION }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.ORG_NUGET_TOKEN }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack --configuration Release --no-build -p:PackageVersion=${{ needs.discover.outputs.version }} --output ./nupkgs

      - name: Publish NuGet Packages
        run: find ./nupkgs -name "*.nupkg" -exec dotnet nuget push {} --source "github" --skip-duplicate --api-key ${{ secrets.ORG_NUGET_TOKEN }} \;
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dotnet

      - name: Tag version
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          git tag ${{ needs.discover.outputs.version_tag }}
          git push origin --tags
